%\VignetteEngine{knitr::knitr}
%\VignetteIndexEntry{describe-data}
%\VignetteEncoding{UTF-8}
\documentclass{article}
\addtolength{\hoffset}{-1cm}
\addtolength{\textwidth}{2cm}
\usepackage{longtable}
% \usepackage[table]{xcolor}
% \addtolength{\voffset}{-1.5cm}
% \addtolength{\textheight}{3cm}

\title{Describe data}
\author{Henrik Renlund}

<<"setup", cache = FALSE, echo = FALSE, include = FALSE>>=
library(knitr)
library(dable)
## devtools::load_all()
opts_chunk$set(include = TRUE,
               echo = TRUE,
               cache = FALSE)
if(FALSE){
    knitr::knit2pdf("describe-data.rnw", clean = TRUE)
    shell.exec("describe-data.pdf")
}
dpset_defaults(overwrite = TRUE)
@

\begin{document}

\maketitle

%% \tableofcontents
%% \newpage

\setcounter{section}{-1}
\section{About}
This is a vignette for \texttt{dable}, a package for making \textbf{d}escriptive
t\textbf{able}s. And like so many other vignettes, it is a work in progress.

\section{A first look}

The package includes a test data set along with associated \texttt{vtab} (table
of variables) and \texttt{stab} (table of survival variables) objects.

<<"test">>=
d <- test_data()
vt <- test_vtab()
st <- test_stab()
@

The test data contains variables of different classes:

<<"test-data">>=
str(d)
@

The "variable table" (\texttt{vtab}) is a data set that assigns a label and
(possibly) a grouping to all the terms of interest

<<"test-vtab">>=
vt
@

The "survival table" (\texttt{stab}) is a data set that specifices the time and
status component of the time-to-event variables in the data set

<<"test-stab">>=
st
@

A "data guide" can be created which assigns a \emph{type} to each variable. The
main types are \emph{real}, \emph{catg}, \emph{date}, and \emph{surv}.
But there is also \emph{bnry}, \emph{lcat}, \emph{unit.id}, and \emph{unknown}.

<<"test-guide">>=
(g <- dguide(d, unit.id = "id", vtab = vt, stab = st))
@


Types are assigned according to rules given by default values. But types can
also be changed manually

<<"test-type-change">>=
g$type[g$term == "pid"] <- "lcat"
@

The test data set has been created so as to be somewhat difficult.
\begin{itemize}
\item \texttt{measNA} is completely missing,
\item \texttt{status} is a constant, and
\item \texttt{measM} only exists for males (\texttt{male == 1}).
\end{itemize}

The table function in this package will try to \textbf{not} stop due to errors,
but rather return an \texttt{NA} if so, and then carry on - returning
\emph{error} and \emph{warning} messages as \emph{messages}.

A baseline table can be created using \texttt{dable}

<<"test-dable">>=
dt <- dable(d, type = "baseline", guide = g, gtab = "gender",
            part = c(T,T,T), time.unit = 365.25)
@

or, if a specific baseline \emph{theme} is wanted

<<"test-baseline", eval = FALSE>>=
baseline(d, theme = 0, type = "baseline", guide = g, gtab = "gender",
         part = c(T,T,T), time.unit = 365.25)
@

but more on themes later.

Note that \texttt{gtab} is the terminology for a "grouping table" - although
this can be created here by just refering to the grouping term.

\texttt{dt} contains many things but we can look at the more interesting stuff

<<"test-select">>=
dt[, c(2,5:6)]
dt[, c(2,7:8)]
@

The attributes contains meta(ish) information that can help create informative tables.

<<"test-attr">>=
attributes(dt)
@

\clearpage
\section{\LaTeX}

There is a function to create nice \LaTeX\, tables.

<<"datex", results = 'asis'>>=
datex(dt, caption = "A nice table", label = "tab:nice")
@


\clearpage
\section{The Dots}

This section seves as a reminder that additional info is being passed to the
descriptive functions.

<<"dots-test">>=

test <- test_data()[, c("pid", "gender", "importance", "measA")]
tg <- dguide(test, unit.id = "pid", vtab = test_vtab())

myFun <- function(x, weight = NULL,  ...){
    dots <- list(...)
    data.frame(dot = names(dots),
               what = unlist(lapply(dots, class)),
               value = unlist(dots))
}
dable(test, type = "real", guide = tg, gtab = "gender",
      weight = "importance", foo = TRUE, fnc = list("myFun"))

@

\clearpage
\section{Baseline themes}

This section should describe the predefined options one has for different types
of baseline structure.

<<"bl-change", include = TRUE, results = 'asis'>>=
dt2 <- baseline(d, theme = 1, guide = g, gtab = "gender", time.unit = 365.25)
blatex(dt2, longtable = TRUE, caption = "Baseline specific function",
       label = "tab:specific")
@


\appendix

\clearpage
\section{Default tests}

This section runs through lots of default values and serves as a test (there
should be no errors here).

\subsection{Default describers}

Each type has a default describer:

%% <<include = TRUE, results = 'asis'>>=
%% datex(dable(d, type = "real", guide = g), rowname = "term", grey = FALSE)
%% @

<<"default-describers">>=
dable(d, type = "real", guide = g)
dable(d, type = "catg", guide = g)
dable(d, type = "bnry", guide = g)
dable(d, type = "date", guide = g)
dable(d, type = "surv", guide = g, time.unit = 365.25)
dable(d, type = "lcat", guide = g)
@

\clearpage
\subsection{Default comparers}

Each type has a default comparer:

<<"default-comparers">>=
dable(d, type = "real", guide = g, gtab = "gender", part = c(F,T))
dable(d, type = "catg", guide = g, gtab = "gender", part = c(F,T))
dable(d, type = "bnry", guide = g, gtab = "gender", part = c(F,T))
dable(d, type = "date", guide = g, gtab = "gender", part = c(F,T))
dable(d, type = "surv", guide = g, gtab = "gender", part = c(F,T))
dable(d, type = "lcat", guide = g, gtab = "gender", part = c(F,T))
@

\clearpage
\subsection{Default testers}

Each type has a default tester:

<<"default-testers">>=
dable(d, type = "real", guide = g, gtab = "gender", part = c(F,F,T))
dable(d, type = "catg", guide = g, gtab = "gender", part = c(F,F,T))
dable(d, type = "bnry", guide = g, gtab = "gender", part = c(F,F,T))
dable(d, type = "date", guide = g, gtab = "gender", part = c(F,F,T))
dable(d, type = "surv", guide = g, gtab = "gender", part = c(F,F,T))
dable(d, type = "lcat", guide = g, gtab = "gender", part = c(F,F,T))
@

\clearpage
\subsection{Default baseline}

The baseline table can produce description, comparison and test part:

<<"default">>=
dable(d, type = "bl", guide = g, gtab = "gender", part = c(F,F,F))
dable(d, type = "bl", guide = g, gtab = "gender", part = c(T,F,F))
dable(d, type = "bl", guide = g, gtab = "gender", part = c(F,T,F))
dable(d, type = "bl", guide = g, gtab = "gender", part = c(F,F,T))
dable(d, type = "bl", guide = g, gtab = "gender", part = c(T,T,F))
dable(d, type = "bl", guide = g, gtab = "gender", part = c(T,F,T))
dable(d, type = "bl", guide = g, gtab = "gender", part = c(F,T,T))
dable(d, type = "bl", guide = g, gtab = "gender", part = c(T,T,T))
@




\end{document}
